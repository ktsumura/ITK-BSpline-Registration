/*=========================================================================
*
*  Copyright Insight Software Consortium
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*         http://www.apache.org/licenses/LICENSE-2.0.txt
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*=========================================================================*/
#include "itkNormalizedCorrelationAndDiceIndexMetric.h"
#include "itkImageRegionConstIteratorWithIndex.h"

using namespace itk;

namespace neo
{
	/**
	* Constructor
	*/
	template <typename TFixedImage, typename TMovingImage>
	NormalizedCorrelationAndDiceIndexMetric<TFixedImage, TMovingImage>
		::NormalizedCorrelationAndDiceIndexMetric()
	{
	}

	///**
	//* Get the match Measure
	//*/
	//template <typename TFixedImage, typename TMovingImage>
	//typename NormalizedCorrelationAndDiceIndexMetric<TFixedImage, TMovingImage>::MeasureType
	//	NormalizedCorrelationAndDiceIndexMetric<TFixedImage, TMovingImage>
	//	::GetValue(const TransformParametersType & parameters) const
	//{
	//	MeasureType measure;
	//	return measure;
	//}

	///**
	//* Get the Derivative Measure
	//*/
	//template <typename TFixedImage, typename TMovingImage>
	//void
	//	NormalizedCorrelationAndDiceIndexMetric<TFixedImage, TMovingImage>
	//	::GetDerivative(const TransformParametersType & parameters,
	//		DerivativeType & derivative) const
	//{
	//	
	//}

	///*
	//* Get both the match Measure and theDerivative Measure
	//*/
	//template <typename TFixedImage, typename TMovingImage>
	//void
	//	NormalizedCorrelationAndDiceIndexMetric<TFixedImage, TMovingImage>
	//	::GetValueAndDerivative(const TransformParametersType & parameters,
	//		MeasureType & value, DerivativeType  & derivative) const
	//{
	//	
	//}

	//template <typename TFixedImage, typename TMovingImage>
	//void
	//	NormalizedCorrelationAndDiceIndexMetric<TFixedImage, TMovingImage>
	//	::PrintSelf(std::ostream & os, Indent indent) const
	//{
	//	Superclass::PrintSelf(os, indent);
	//	//os << indent << "SubtractMean: " << m_SubtractMean << std::endl;
	//}

} // end namespace itk
